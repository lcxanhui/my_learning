/*****************************************************************************************************
 *         剑指offer第34题
 * 把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。 
   习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。
 *
 * Input:  
 * Output: 第N个丑数
 *
 * Note: 
 * 关键在于思路
    链接：https://www.nowcoder.com/questionTerminal/6aa9e04fc3794f68acf8778237ba065b
     来源：牛客网

首先从丑数的定义我们知道，一个丑数的因子只有2,3,5，那么丑数p = 2 ^ x * 3 ^ y * 5 ^ z，
换句话说一个丑数一定由另一个丑数乘以2或者乘以3或者乘以5得到，那么我们从1开始乘以2,3,5，
就得到2,3,5三个丑数，在从这三个丑数出发乘以2,3,5就得到4，6,10,6，9,15,10,15,25九个丑数，
我们发现这种方法会得到重复的丑数，而且我们题目要求第N个丑数，这样的方法得到的丑数也是
无序的。那么我们可以维护三个队列：
	（1）丑数数组： 1
	乘以2的队列：2
	乘以3的队列：3
	乘以5的队列：5
选择三个队列头最小的数2加入丑数数组，同时将该最小的数乘以2,3,5放入三个队列；
	（2）丑数数组：1,2
	乘以2的队列：4
	乘以3的队列：3，6
	乘以5的队列：5，10
选择三个队列头最小的数3加入丑数数组，同时将该最小的数乘以2,3,5放入三个队列；
	（3）丑数数组：1,2,3
	乘以2的队列：4,6
	乘以3的队列：6,9
	乘以5的队列：5,10,15
选择三个队列头里最小的数4加入丑数数组，同时将该最小的数乘以2,3,5放入三个队列；
	（4）丑数数组：1,2,3,4
	乘以2的队列：6，8
	乘以3的队列：6,9,12
	乘以5的队列：5,10,15,20
选择三个队列头里最小的数5加入丑数数组，同时将该最小的数乘以2,3,5放入三个队列；
（	5）丑数数组：1,2,3,4,5
	乘以2的队列：6,8,10，
	乘以3的队列：6,9,12,15
	乘以5的队列：10,15,20,25
选择三个队列头里最小的数6加入丑数数组，但我们发现，有两个队列头都为6，所以我们
弹出两个队列头，同时将12,18,30放入三个队列；
 * author: lcxanhui@163.com
 * time: 2019.5.16
 ******************************************************************************************************/
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int UglyNum(int index)
{
	// 0-6的丑数分别为0-6
	if (index < 7)
		return index;
	vector<int> res(index);
	res[0] = 1;
	//t2，t3，t5分别为三个队列的指针，res[i]为从队列头选出来的最小数
	int t2 = 0, t3 = 0, t5 = 0;
	for (int i = 1; i < index; i++)
	{
		//选出三个队列头最小的数
		res[i] = min(res[t2] * 2, min(res[t3] * 3, res[t5] * 5));
		//这三个if有可能进入一个或者多个，进入多个是三个队列头最小的数有多个的情况
		if (res[i] = res[t2] * 2)
			t2++;
		if (res[i] = res[t3] * 3)
			t3++;
		if (res[i] = res[t5] * 5)
			t5++;
	}
	return res[index - 1];
}

int main(void)
{
	int index;
	cin >> index;
	int res = UglyNum(index);
	cout << res;
	return 0;
}